### CLOUD-INIT ###
#Create new workspaces from terraform cloud 
terraform.io/cloud > Workspaces > New workspace > Choose type = CLI-driven-workflow > Name Workspace = provisioners

#Create variable on terraform cloud
terraform.io/cloud > Workspaces > getting-started > variables 

AWS_ACCESS_KEY_ID = AKIDa....
AWS_SECRET_ACCESS_KEY = sjalrrra....

#Create file terraform
nano main.tf 

terraform {
  backend "remote {
    organization = "rapli"              #organization = url sebelum kata workspaces di browser (https://app.terraform.io/app/rapli/workspaces)
    workspaces {
      name = "provisioners"
    }
  }
  provider "aws" {
    region = "us-east-1"
  }

  data "aws_vpc" "main" {
    id = "vpc-bd9bdcc7"
  }

  data "template_file" "user_data" {
    template = file("./userdata.yaml)
  }

  resource "aws_key_pair" "deployer" {
    key_name   = "deployer-key"
    public_key = "ssh-rsa AAA...."
  }

  resource "aws_instance" "my_server" {
    ami           = "ami-087c17d1fe0178315"
    instance_type = "t2.micro"
    key_name      = "${aws_key_pair.deployer.key_name}
    vpc_security_group_ids = [aws_security_group.sg_my_server.id]
    user_data = data.template_file.user_data.rendered
    tags = {
      Name = "MyServer"
    }
  }

  resource "aws_security_group" "sg_my_server" {
    name        = "sg_my_server"
    description = "MyServer Security Group"
    vpc_id      = data.aws_vpc.main.id
    ingress     = [
      {
        description      = "HTTP"
        from_port        = 80
        to_port          = 80
        protocol         = "tcp"
        cidr_blocks      = ["104.194.51.113/32"]
        ipv6_cidr_blocks = []
        prefix_list_ids  = []
        security_groups  = []
        self             = false
      },
      {
        description      = "SSH"
        from_port        = 22
        to_port          = 22
        protocol         = "tcp"
        cidr_blocks      = ["104.194.51.113/32"]
        ipv6_cidr_blocks = []
        prefix_list_ids  = []
        security_groups  = []
        self             = false
      }
    ] 
  }
}

output "public_ip" {
  value = aws_instance.my_server.public_ip
}


nano userdata.yaml

#cloud-config 
packages:
  - httpd
runcmd:
  - systemctl start httpd
  - sudo systemctl enable httpd

