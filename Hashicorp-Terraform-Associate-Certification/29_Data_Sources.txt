### DATA SOURCES ###
Data sources allow terraform use information defined outside of terraform, define by another separate terraform configuration or mofified by function.

##Example 
data "aws_ami" "web" {                                  #you can spesific what kind of external resource you want to select
  filter {                                              #you can use filters to narrow down selection
    name    = "state"
    values  = ["available"]
  }

  filter {
    name    = "tag:Component"
    values  = ["web"] 
  }

  most_recent = true
}

resource "aws_instance" "web" {
  ami           = data.aws_ami.web.id
  instance_type = "t1.micro"
}

##Example 2
nano main.tf 

terraform {
  backend "remote" {
    hostname     = "app.terraform.io"
    organization = "rapli"

    workspace {
      name = "getting-started"
    }
  }
}

provider "aws" {
  profile = "default"
  region  = "us-east-1"
}

module "aws_server" {
  source        = ".//aws_server"
  instance_type = "t2.micro"
}

variable "instance_type" {
  type        = string
  description = "The size of instance"
  #sensitive  = true
  validation {
    condition     = can(regex("^t2.", var.instance_type))
    error_message = "Instance must be e t2 type EC2 instance."
  }
}

data "aws_ami" "ubuntu" {
  most_recent = true

  filter {
    name = "name"
    values = ["ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"]
  }

  filter {
    name = "virtualization-type"
    values = ["hvm"]
  }

  owners = ["099720109477"]       #cannonical
}


resource "aws_instance" "my_server" {
  ami           = data.aws_ami.id
  instance_type = var.instance_type
}

output "public_ip" {
  value = aws_instance.my_server.public_ip
}