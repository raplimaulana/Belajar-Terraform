### TERRAFORM PROVISIONERS ###
Terraform provisioners install software, edit files and provision machines created with terraform.
Terraform allow you to work with 2 different provisioners:
• Cloud-init
  Cloud-init is an industry standard for cross-platfoem cloud instance initializations. 
  When you lunch a VM on a Cloud Service Provider (CSP), you will provide a YAML or bash script.

• Packer
  Packer is an automated image-builder service.
  You provide a configuration file to create and provision the machine image and the image is the delivered to a repository for use.

*Provisioners should only used as a last resort. 
 For most common situations there are better alternatives.

Terraform use to directly to support third-party provisioning tools in the terraform language support was deprecated, because terraform considered using provisioners to be poor practice suggesting better alternatives.
Alternativelly Cloud-init supports chef and puppet, so we can use Cloud-init if we want to add chef and puppet to our terraform.

##Create Cloud-init script in terraform
#Create your own Cloud-init script
nano add-ssh-web-app.yaml 

users:
  - default
  - name: terraform
    gecos: terraform
    primary_group: hashicorp
    sudo : ALL=(ALL) NOPASSWD ALL
    groups: users, admin
    ssh_import_id:
    lock_passwd: false
    ssh_authorized_keys:
      - a140u11f
package_upgrade: yes
package_update: yes
packages:
  - httpd
runcmd:
  - sudo service httpd restart
  - sudo service httpd enable

#Define the template file
nano main.tf 

data "template_file" "user_data" {
    template = file("../scripts/add-ssh-web-app.yaml)
}

resource "aws_instance" "web" {
  ami                         = data.aws_ami.ubuntu.id
  instance_type               = "t2.micro"
  subnet_id                   = aws_subnet.subnet_public.id
  vpc_security_group_ids      = [aws_security_group.sg_22_80.id]
  associate_public_ip_address = true
  user_data                   = data.template_file.user_data.rendered       #reference it for vm
  tags = {
    Name = "Learn-CloudInit"
  }
}

#Create Cloud-init script with puppet
nano cloud-init-puppet.yaml 

puppet:
  install: true
  version: "7.7.0"
  install_type: "packages"
  collection: "puppet7"
  cleanup: true
  aio_install_url: "https://raw.githubusercontent.com/puppetlabs/install-puppet/main/install.sh 
  conf_file: "/etc/puppet/puppet.conf"
  ssl_dir: "/var/lib/puppet/ssl"
  csr_attributes_path: "/etc/puppet/csr_attributes.yaml"
  package_name: "puppet"
  exec: false
  exec_args: "--test"
  conf:
    agent:
      server: "puppetserver.example.org" 