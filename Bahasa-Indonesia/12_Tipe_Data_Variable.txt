### TIPE DATA VARIABLE ###

Types
The Terraform language uses the following types for its values:

•   string.
    A sequence of Unicode characters representing some text, like "hello".

•   number.
    A numeric value. The number type can represent both whole numbers like 15 and fractional values like 6.283185.

•   bool.
    A boolean value, either true or false. bool values can be used in conditional logic.

•   list (or tuple or array).
    A sequence of values, like ["us-west-1a", "us-west-1c"]. Elements in a list or tuple are identified by consecutive whole numbers, starting with zero.

•   map (or object).
    A group of values identified by named labels, like {name = "Mabel", age = 52}.

•   null.
    A value that represents absence or omission. 
    If you set an argument of a resource to null, Terraform behaves as though you had completely omitted it — it will use the argument's default value if it has one, or raise an error if the argument is mandatory. null is most useful in conditional expressions, so you can dynamically omit an argument if a condition isn't met.

*Strings, numbers, and bools are sometimes called primitive types. Lists/tuples and maps/objects are sometimes called complex types, structural types, or collection types.

##membuat variable menggunakan tipe data tertentu
@file ada Templates/12_Tipe Data Variable/main.yml

#tipe data string
1. file main.tf
   
   variable "subnet-ip-cidr-range"{
        ...
        type = string
   } 

   resource "google_compute_subnetwork" "dev-subnet-01"{
       name = "dev-subnet-01"
       ip_cidr_range = var.subnet-ip-cidr-range
       ...
    }

2. file terraform-dev.tfvars

   subnet-ip-cidr-range = "10.160.0.0/16"


#tipe data list 
1. file main.tf
   
   variable "subnet-ip-cidr-range"{
        ...
        type = list(string)
   } 

   resource "google_compute_subnetwork" "dev-subnet-01"{
       name = "dev-subnet-01"
       ip_cidr_range = var.subnet-ip-cidr-range[0]
       ...
    }

   resource "google_compute_subnetwork" "dev-subnet-02"{
       name = "dev-subnet-02"
       ip_cidr_range = var.subnet-ip-cidr-range[1]
       ...
    }


2. file terraform-dev.tfvars

   subnet-ip-cidr-range = [ "10.160.0.0/16", "10.170.0.0/16" ]


#tipe data object 
1. file main.tf
   
   variable "subnet-ip-cidr-range"{
        ...
        type = list(object({name = string, range = string}))
   } 

   resource "google_compute_subnetwork" "dev-subnet-01"{
       name = var.subnet-ip-cidr-range[0].name
       ip_cidr_range = var.subnet-ip-cidr-range[0].range
       ...
    }

   resource "google_compute_subnetwork" "dev-subnet-02"{
       name = var.subnet-ip-cidr-range[1].name
       ip_cidr_range = var.subnet-ip-cidr-range[1].range
       ...
    }


2. file terraform-dev.tfvars

   subnet-ip-cidr-range = [
       {range: "10.160.0.0/16", name: "dev-subnet-01"},
       {range: "10.170.0.0/16", namr: "dev-subnet-02"}
    ]